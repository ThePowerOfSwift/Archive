#include "colors.js"#include "conversions.js"#include "Key.js"function FingeringDiagram() {    // Declare group for fingering diagram    fingeringDiagramGroup = testDoc.groupItems.add();        // Array of each key primary in each diagram    this.primaryKeyList = ["lh1", "lh2", "lh3", "rh1", "rh2", "rh3"];}FingeringDiagram.prototype.keys = function() {        // Call for the drawing of the primary keys    this.primaryKeys();        // Call for the drawing of the grouped keys    this.keyGroups();}FingeringDiagram.prototype.primaryKeys = function() {        // Draw all primary keys    for (var k = 0; k < this.primaryKeyList.length; k ++) {        var curKey = this.primaryKeyList[k];        var curKeyVal = this.fingering[curKey];        var curState = keyValToState(curKeyVal);        this[curKey](curState);    };    // Draw separator line    this.separator();};FingeringDiagram.prototype.keyGroups = function() {    // Draw all keys in key groups    for (var g in this.keyGroupLists) {        var curGroup = this.keyGroupLists[g];        var activeKeys = 0;        for (var k = 0; k < curGroup.length; k ++) {            var curKey = curGroup[k];            var curKeyVal = this.fingering[curKey];            if (curKeyVal != 0) {                activeKeys ++            };        };        if (activeKeys > 0) {            for (var k = 0; k < curGroup.length; k ++) {                var curKey = curGroup[k];                var curKeyVal = this.fingering[curKey];                var curState = keyValToState(curKeyVal);                var key = this[curKey](curState);            };        };    };};FingeringDiagram.prototype.lh1 = function(state) {    var x = this.x;    var y = this.baseline + 10.6*this.f;    var d = this.f;        // Call for the drawing of key, with the appropriate state method called    var key = new CircleKey(x, y, d)[state]();}FingeringDiagram.prototype.lh2 = function(state) {    var x = this.x;    var y = this.baseline + 9.1*this.f;    var d = this.f;        // Call for the drawing of key, with the appropriate state method called    var key = new CircleKey(x, y, d)[state]();}FingeringDiagram.prototype.lh3 = function(state) {        var x = this.x;    var y = this.baseline + 7.6*this.f;    var d = this.f;        // Call for the drawing of key, with the appropriate state method called    var key = new CircleKey(x, y, d)[state]();}FingeringDiagram.prototype.separator = function() {        var line = fingeringDiagramGroup.pathItems.add();        line.setEntirePath([        [this.x - .5*this.f, this.baseline + 6.6*this.f],        [this.x + .5*this.f, this.baseline + 6.6*this.f]    ]);    line.strokeWidth = this.strokeWidth;    line.strokeColor = gray[66];    line.filled = false;}FingeringDiagram.prototype.rh1 = function(state) {        var x = this.x;    var y = this.baseline + 5.6*this.f;    var d = this.f;        // Call for the drawing of key, with the appropriate state method called    var key = new CircleKey(x, y, d)[state]();}FingeringDiagram.prototype.rh2 = function(state) {    var x = this.x;    var y = this.baseline + 4.1*this.f;    var d = this.f;        // Call for the drawing of key, with the appropriate state method called    var key = new CircleKey(x, y, d)[state]();}FingeringDiagram.prototype.rh3 = function(state) {        var x = this.x;    var y = this.baseline + 2.6*this.f;    var d = this.f;        // Call for the drawing of key, with the appropriate state method called    var key = new CircleKey(x, y, d)[state]();}