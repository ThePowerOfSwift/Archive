function AdjacentHarmonicEvent(scordOpenStrings, ordOpenStrings) {     this.scordOpenStrings = scordOpenStrings;    this.ordOpenStrings = ordOpenStrings;    this.buildPitchList();    // for texting only!    this.testPair();    // do the things}AdjacentHarmonicEvent.prototype.buildPitchList = function() {    this.pitchListByString = {};    for (var string = 0; string < 4; string ++) {        this.pitchListByString[string] = {};        var stringFundamentalMidi = this.scordOpenStrings[string];        var stringFundamentalFreq = midiToFreq(stringFundamentalMidi);        for (var partial = 2; partial < 10; partial ++) {            var freq = stringFundamentalFreq * partial;            var midi = freqToMidi(freq);            this.pitchListByString[string][partial] = Math.round(midi*4)/4;        };    };};AdjacentHarmonicEvent.prototype.testPair = function() {    this.partialPairs = [        [2,2],[3,3],[4,4],[5,5],[6,6],        [3,4],[4,5],[5,6],[4,3],[5,4],[6,5]    ];    var string = Math.floor(Math.random()*3);    t.w("randomString: " + string);    var randPairChoice = Math.floor(Math.random()*this.partialPairs.length);    var pair = this.partialPairs[randPairChoice];    t.w("randomPair: " + pair);    var partial0 = pair[0];    var partial1 = pair[1];    var soundingPitch0 = this.pitchListByString[string][partial0];    var soundingPitch1 = this.pitchListByString[string + 1][partial1];    t.w("pitch0: " + soundingPitch0 + "; pitch1: " + soundingPitch1);    this.position0 = 1 / partial0;    this.position1 = 1 / partial1;    var fingeredPitch0 = Math.round(positionToMidi(        this.position0, this.ordOpenStrings[string]    )*4)/4;    var fingeredPitch1 = Math.round(positionToMidi(        this.position1, this.ordOpenStrings[string + 1]    )*4)/4;    this.fingeredPitchINFO = {};    this.fingeredPitchINFO[fingeredPitch0] = {};    this.fingeredPitchINFO[fingeredPitch0].type = "harmonic";    this.fingeredPitchINFO[fingeredPitch1] = {};    this.fingeredPitchINFO[fingeredPitch1].type = "harmonic";    this.soundingPitchINFO = {};    this.soundingPitchINFO[soundingPitch0] = {};    this.soundingPitchINFO[soundingPitch1] = {};    this.strings = [string, string + 1];    t.w("fingeredPitch0: " + fingeredPitch0 + "; fingeredPitch1: " + fingeredPitch1);}