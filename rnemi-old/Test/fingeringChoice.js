//#include "FING_FL_P.js"#include "FING_FL_C.js"/*#include "FING_FL_A.js"#include "FING_FL_B.js"#include "FING_SAX_S.js"#include "FING_SAX_A.js"#include "FING_SAX_T.js"#include "FING_SAX_B.js"#include "FING_CL_BIS.js"#include "FING_CL_BASS.js"*/#include "fingeringKeyList.js"function fingeringChoice(fingering) {		// Takes in an array of objects, often of length: 1; 2 if trill};var randFing1 = Math.floor(Math.random()*FING_FL_C.length)var trillList1 = [];trillList1.length = 0;var trillList2 = [];trillList2.length = 0;var trillList3 = [];trillList3.length = 0;trillList.push(FING_FL_C[randFing1])for (var fing = 0; fing < FING_FL_C.length; fing ++) {        var keyChange = 0        for (var key = 0; key < FL_C_keys.length; key ++) {                if (FING_FL_C[randFing1].fingering[FL_C_keys[key]] != FING_FL_C[fing].fingering[FL_C_keys[key]]) {                        keyChange ++        }    };    //$.writeln("keyChange: " + keyChange)        if (keyChange == 1) {                trillList1.push(FING_FL_C[fing])    }    else if (keyChange == 2) {                trillList2.push(FING_FL_C[fing])    }    else if (keyChange == 3) {                trillList3.push(FING_FL_C[fing])    };};/*for (trillFing = 1; trillFing < trillList.length; trillFing ++) {        for (var key = 0; key < FL_C_keys.length; key ++) {                $.writeln(FL_C_keys[key] + ": " + trillList[0].fingering[FL_C_keys[key]] + "; " +                  trillList[trillFing].fingering[FL_C_keys[key]])    }};*/for (var key = 0; key < FL_C_keys.length; key ++) {        $.write(FL_C_keys[key] + ": " + FING_FL_C[randFing1].fingering[FL_C_keys[key]])        for (trillFing1 = 0; trillFing1 < trillList1.length; trillFing1 ++) {                    $.write("; " + FING_FL_C[trillFing1].fingering[FL_C_keys[key]])                if (trillFing1 == trillList1.length - 1) {                        $.writeln()        }    };};$.writeln(trillList1.length)$.writeln(trillList2.length)$.writeln(trillList3.length)    