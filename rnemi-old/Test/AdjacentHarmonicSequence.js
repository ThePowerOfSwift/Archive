#include "../testDoc.js"#include "../conversions.js"#include "../colors.js"#include "../Staff.js"function AdjacentHarmonicSequence(scordOpenStrings, ordOpenStrings) {        this.scordOpenStrings = scordOpenStrings;    this.ordOpenStrings = ordOpenStrings;    this.buildPitchList();    this.drawPitches();}AdjacentHarmonicSequence.prototype.buildPitchList = function() {    this.pitchListByString = {};    for (var string = 0; string < 4; string ++) {        this.pitchListByString[string] = {};        var stringFundamentalMidi = this.scordOpenStrings[string];        var stringFundamentalFreq = midiToFreq(stringFundamentalMidi);        for (var partial = 2; partial < 10; partial ++) {            var freq = stringFundamentalFreq * partial;            var midi = freqToMidi(freq);            this.pitchListByString[string][partial] = Math.round(midi*4)/4;        };    };};AdjacentHarmonicSequence.prototype.drawPitches = function() {    var partialPairs = [        [3,4],[4,5],[5,6],[3,5]    ];    var top = 10 * 72;    for (var pair = 0; pair < partialPairs.length; pair ++) {        var curPair = partialPairs[pair];        var curPartial = curPair[0];        var nextPartial = curPair[1];        var staff = new Staff(100, top - 100 * pair, 0.75 * 5, "treble", 0);        var x = 125;        for (var string = 0; string < 3; string ++) {            var curString = string;            var nextString = string + 1;            // First of pair            var pitch0  = this.pitchListByString[nextString][curPartial];            var pitch1 = this.pitchListByString[curString][nextPartial];            var pitchINFO = {};            pitchINFO[pitch0] = {};            pitchINFO[pitch0].type = "ord";            pitchINFO[pitch0].color = stringColor[nextString].darkColor;            pitchINFO[pitch1] = {};            pitchINFO[pitch1].type = "ord";            pitchINFO[pitch1].color = stringColor[curString].darkColor;            staff.pitch(x, pitchINFO);                        this.label(x, curGraph.bottom - 10, nextString, curPartial);            this.label(x, curGraph.bottom - 18.5, curString, nextPartial);            x += 33;            // Second of pair            var pitch0 = this.pitchListByString[curString][curPartial];            var pitch1 = this.pitchListByString[nextString][nextPartial];            var pitchINFO = {};            pitchINFO[pitch0] = {};            pitchINFO[pitch0].type = "ord";            pitchINFO[pitch0].color = stringColor[curString].darkColor;            pitchINFO[pitch1] = {};            pitchINFO[pitch1].type = "ord";            pitchINFO[pitch1].color = stringColor[nextString].darkColor;            staff.pitch(x, pitchINFO);                        this.label(x, curGraph.bottom - 10, nextString, nextPartial);            this.label(x, curGraph.bottom - 18.5, curString, curPartial);                         x += 33;        };    };}AdjacentHarmonicSequence.prototype.label = function(x, y, string, partial) {    var stringNumberToRoman = ["IV", "III", "II", "I"];    this.labelBox(x, y, string);    var font = app.textFonts.getByName("Baskerville-SemiBold");    var text = testDoc.textFrames.add();    text.contents = stringNumberToRoman[string] + "." + partial;    text.top = y + 10;    text.left = x;    text.textRange.paragraphAttributes.justification = Justification.CENTER;    text.textRange.characterAttributes.size = 8;    text.textRange.characterAttributes.fillColor = stringColor[string].darkColor;    text.textRange.characterAttributes.textFont = font;}AdjacentHarmonicSequence.prototype.labelBox = function(x, y, string) {    var height = 7.5;    var width = 16.5;    var color = stringColor[string].darkColor;        var labelBox = testDoc.pathItems.rectangle(        y + 0.85 * height,        x - 0.5 * width,        width,        height    );    labelBox.strokeWidth = 0.1;    labelBox.strokeColor = color;    labelBox.fillColor = white;}var scordOpenStrings = [46, 55, 61, 69];var ordOpenStrings = [48, 55, 62, 69];var seq = new AdjacentHarmonicSequence(scordOpenStrings, ordOpenStrings);