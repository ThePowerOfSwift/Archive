#include "../testDoc.js"#include "../Staff.js"#include "../TimeSignature.js"#include "../Barline.js"var barlineGroup = testDoc.groupItems.add();var stavesByInstrument = {    "flute": {        "sounding": "treble"    },    "clarinet": {        "sounding": "treble",        "fingered": "treble"    },    "viola": {        "sounding": "treble",        "tablature": "treble",        "fingered": "alto"    }} function randBeats() {    var beats = Math.floor(Math.random()*6 + 3);    return beats};function randSubdivision() {    var subdList = [8,16,32];    var randVal = Math.floor(Math.random()*subdList.length);    var subdivision = subdList[randVal];    return subdivision;};function randEnsemble() {    var ensembleList = [        ["flute"],        ["clarinet"],        ["viola"],        ["flute", "clarinet"],        ["flute", "viola"],        ["clarinet", "viola"],        ["flute", "clarinet", "viola"]    ];    var randVal = Math.floor(Math.random()*ensembleList.length);    var ensemble = ensembleList[randVal];    return ensemble;};function newStavesByInstrument(y, ensemble) {    for (var instrument = 0; instrument < ensemble.length; instrument ++) {        var curInstrument = ensemble[instrument];        for (var graph in stavesByInstrument[curInstrument]) {            var type = stavesByInstrument[curInstrument][graph];            var staff = new Staff(y, 35, 5, type);            y -= 100;        };    };}var maxSystemWidth = 15.75 * 72;var beat_width = 72;var measureList = [];for (var s = 0; s < 30; s ++) {    var newMeasure = {        "beats": randBeats(),        "subdivision": randSubdivision(),        "players": randEnsemble()    };    measureList.push(newMeasure);};var systemWidth = 0;var systemTop = 10*72;var systemCount = 0;var system_vertDisplace = 400;var x = 50;for (var measure = 0; measure < measureList.length; measure ++) {    var curMeasure = measureList[measure];    var beats = curMeasure.beats;    var subdivision = curMeasure.subdivision;    var measureWidth = beats/subdivision*8*beat_width;    if (measure === 0) {        // draw staves, or first calculate dimensions        var ensemble = randEnsemble();        newStavesByInstrument(systemTop, ensemble)        //var staff = new Staff(systemTop);    };    var timeSignature = new TimeSignature(        barlineGroup, x, curGraph.top + 20, 5, beats, subdivision    );    var barline = new Barline(barlineGroup, x,             curGraph.top + 0.5*curGraph.staffLine_strokeWidth,             curGraph.bottom - 0.5*curGraph.staffLine_strokeWidth    );    curGraph.linePoints(x);            if (systemWidth + measureWidth > maxSystemWidth) {        // add last barline        var barline = new Barline(barlineGroup, x,             curGraph.top + 0.5*curGraph.staffLine_strokeWidth,             curGraph.bottom - 0.5*curGraph.staffLine_strokeWidth        );        curGraph.linePoints(x + 0.5*curBarline.strokeWidth);        systemWidth = measureWidth;        x = 50;        systemCount ++;        var ensemble = randEnsemble();        newStavesByInstrument(systemTop, ensemble)        // first info of new system        var timeSignature = new TimeSignature(            barlineGroup, x, curGraph.top + 20, 5, beats, subdivision        );        var barline = new Barline(barlineGroup, x,             curGraph.top + 0.5*curGraph.staffLine_strokeWidth,             curGraph.bottom - 0.5*curGraph.staffLine_strokeWidth        );        //draw staves at new systemTop - y;    }    else {        systemWidth += beats/subdivision*8*beat_width;        //proceed    };    x += measureWidth;    // if last measure, add last barline    if (measure === measureList.length - 1) {        var barline = new Barline(barlineGroup, x,             curGraph.top + 0.5*curGraph.staffLine_strokeWidth,             curGraph.bottom - 0.5*curGraph.staffLine_strokeWidth        );        curGraph.linePoints(x);    }            t.w(measure + ": " + beats + " / " + subdivision +         "; systemWidth: " + systemWidth + "; systemTop: " + systemTop +        "; ensemble: " + ensemble    );};