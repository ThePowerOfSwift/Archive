#include "../conversions.js"// Takes in list of accidentals (sorted by low-to-high verticality)function AccidentalCollision(accidentals) {    this.accidentals = accidentals;    this.amount = accidentals.length;    this.allCollisions = [];        // Creates list list of all pairs of accidentals    this.createDyadList();    this.creatAllCollisions();        // Recursive activity predicated on how many accidentals present    // If only single collision: something    // If mulitple collisions: something else, base case single collision}AccidentalCollision.prototype.createDyadList = function() {        this.dyadList = [];    for (var a = 0, aa = a + 1; a < this.amount - 1; a ++, aa ++) {        var dyad = [ this.accidentals[a], this.accidentals[aa] ];        this.dyadList.push(dyad);    };};AccidentalCollision.prototype.createAllCollisions = function() {    for (var d = 0; d < this.dyadList.length; d ++) {        var dyad = this.dyadList[d];        this.dyadCollision(dyad[0], dyad[1]0);    };    // Push all collisions up to this.allCollisions as objects    // [[0,1],[1,2],[2,n]]    // Object for each dyad};AccidentalCollision.prototype.dyadCollision = function(a,b) {    // return info (to be added to allCollisions)    $.writeln("a.x: " + a.x + "; b.x: " + b.x);};