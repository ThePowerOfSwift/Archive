#include "DynamicMarking.js"#include "DynamicInterpolation.js"function DynamicStratum(Voice) {    this.Voice = Voice;    this.graphicalContext = this.Voice.System.infoItemContext;    this.markings = [];    this.interpTypes = [];    this.prevMarking;};DynamicStratum.prototype.rest = function(dynamicList, x, type) {    var type = type || "ord";    var y = this.altitude;    var marking = new DynamicMarking(this, dynamicList, x, y, type);    if (!this.prevMarking) { marking.draw(this.graphicalContext); }    else {        var a = this.prevMarking;        var b = marking;        var interp = this.interpTypes.last();        this.commitMarkingsAndInterpolation(a, b, interp);    };    this.prevMarking = undefined;};DynamicStratum.prototype.commitMarkingsAndInterpolation = function(a, b, interp) {    this.interpolation(a, b, interp);    if (!a.hasBeenDrawn) a.draw(this.graphicalContext);    if (!b.hasBeenDrawn) b.draw(this.graphicalContext);    this.prevMarking = b;}DynamicStratum.prototype.marking = function(dynamicList, x, type, interp) {        var type = type || "ord";    var interp = interp || "linear";    var y = this.altitude;    this.interpTypes.push(interp);    if (this.prevMarking && (interp === "swell" || interp === "static")) {        dynamicList[0] = dynamicList[0].toString();    }     var marking = new DynamicMarking(this, dynamicList, x, y, type);    this.markings.push(marking);    if (!this.prevMarking) { this.prevMarking = marking; }    else {        var interp = this.interpTypes.last();        var a = this.prevMarking;        var b = marking;        t.w("a.dynamicList: " + a.dynamicList + "; b.dynamicList: " + b.dynamicList);        if (!(a.dynamicList.last() === parseInt(b.dynamicList[0]))) {            t.w("EQUIV!");            /*if (interp === "swell" || interp === "static") {                t.w("interp: " + interp);                b.dynamicList[0] = b.dynamicList[0].toString();                t.w("typeof 1st: " + typeof b.dynamicList[0])            };*/            this.commitMarkingsAndInterpolation(a, b, interp);        };    };};DynamicStratum.prototype.interpolation = function(a, b, type) {    var interpolation = new DynamicInterpolation(type);    interpolation.begin(a);    interpolation.end(b);    interpolation.draw(this.graphicalContext);};DynamicStratum.prototype.getHeightForLayout = function() {    this.height = 2.36 * this.g;    return this.height;};