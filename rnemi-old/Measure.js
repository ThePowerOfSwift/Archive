#include "MeasureNumber.js"#include "TimeSignature.js"#include "Barline.js"function Measure(System, left, top, index) {    this.System = System;    this.graphicalContext = this.System.graphicalContext;    this.left = left;    this.top = top;    this.index = index;    this.measureList = this.System.measureList;    this.measureInfo = this.measureList[this.index];    this.beats = this.measureInfo.beats;    this.subdivision = this.measureInfo.subdivision;    this.beatWidth = this.System.Page.View.beatWidth;    this.width = this.beats / this.subdivision * 8 * this.beatWidth;    this.performers = this.measureInfo.performers;    //this.amountPerformers = this.performers.length;    this.height = this.amountPerformers * 0.75 * 72;}Measure.prototype.testRect = function() {    var rect = this.graphicalContext.pathItems.rectangle(        this.top, this.left, this.width, this.height    );    rect.strokeWidth = 0.25;    rect.strokeColor = blue_dark;    rect.fillColor = blue_light;    //this.testNum();};Measure.prototype.testNum = function() {    var num = this.graphicalContext.textFrames.add();    num.contents = this.index;    num.top = this.top - (0.125 * 72);    num.left = this.left + (0.125 * 72);    num.textRange.paragraphAttributes.justification = Justification.LEFT;}Measure.prototype.draw = function(graphicalContext) {       this.graphicalContext = graphicalContext;    this.barline(this.left);    this.timeSignature();    this.number();}Measure.prototype.number = function() {        var top = this.System.top;    var number = new MeasureNumber(this, this.left, top, this.index + 1);    number.draw(this.graphicalContext);    return number;}Measure.prototype.timeSignature = function() {        var top = this.System.top - (        this.System.measureNumberHeight + this.System.genericPad    );    var timeSignature = new TimeSignature(        this, this.left, top, "ord"    );    timeSignature.draw(this.graphicalContext);    return timeSignature;}Measure.prototype.barline = function(x, type) {        var top = this.System.top - this.System.timeSignatureHeight;    var bottom = this.System.top - this.System.height;    var barline = new Barline(this.graphicalContext, x, top, bottom, type);}/*function Measure(curX, baseline, num, beats, beat_type) {        this.curX = curX;    this.baseline = baseline;    this.num = num;    this.beats = beats;    this.beat_type = beat_type;        // Call MeasureNumber    var measureNum = new MeasureNumber(curX, baseline + 35, num);    var timeSig = new TimeSignature(curX, baseline + 10, beats, beat_type);    //var barline = new Barline(curX, baseline - 14.5, baseline - 16*72 + 60);}*/