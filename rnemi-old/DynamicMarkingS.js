function DynamicMarkingS(DynamicMarking) {        // Establish the things    this.DynamicMarking = DynamicMarking;    this.graphicalContext = this.DynamicMarking.graphicalContext.groupItems.add();    this.g = this.DynamicMarking.g;    this.y = this.DynamicMarking.y;    if (this.DynamicMarking.charList[1] === "p")          { this.displace = 2.25 * this.g; }    else { this.displace = 1.80 * this.g; };    this.x = this.DynamicMarking.x - this.displace;    this.color = gray[50]; // perhaps variable later        // Do the things    this.dot();    this.stem();    this.graphicalContext.rotate(-6);}DynamicMarkingS.prototype.dot = function() {    var top = this.y - 1.8 * this.g;    var width = 0.65 * this.g;    var left = this.x - 0.5 * width;    $.writeln("top: " + top + "; width: " + width + "; left: " + left);    var dot = this.graphicalContext.pathItems.ellipse(        top, left, width, width    );    dot.stroked = false;    dot.fillColor = this.color;}DynamicMarkingS.prototype.stem = function() {    var bottom = this.y - 1.3 * this.g;    var top = this.y + 2.65 * this.g;    var bottomWidth = 0.3 * this.g;    var topWidth = 1.618 * bottomWidth;    var points = [        [this.x - 0.5 * topWidth, top],        [this.x + 0.5 * topWidth, top],        [this.x + 0.5 * bottomWidth, bottom],        [this.x - 0.5 * bottomWidth, bottom]    ];    var stem = this.graphicalContext.pathItems.add();    stem.setEntirePath(points);    stem.stroked = false;    stem.fillColor = this.color;}