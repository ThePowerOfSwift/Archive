#include "Page.js"function View(primaryPerformerID, measureList) {    this.primaryPerformerID = primaryPerformerID || "omni";    this.performerOrder = this.getPerformerOrder();    this.measureList = measureList || [[7,16],[4,8],[3,16],[13,16],[7,8]];    this.setGraphicalContext();    this.managePages();}View.prototype.setGraphicalContext = function(format) {    this.g = 5; // perhaps this should be flexible depending on format    this.pageWidth = 17 * 72;    this.pageHeight = 13 * 72;    this.beatWidth = 72;        // Define graphical context    this.graphicalContext = app.documents.add(        DocumentColorSpace.CMYK, // documentColorSpace        this.pageWidth, // width        this.pageHeight, // height        1 // numArtboards    );    // Set initial graphical point-of-reference to the top-left-most corner!    this.initLeft = -100 * 72;    this.initTop = 115 * 72;    // move initial artboard to top-left as possible    this.graphicalContext.artboards[0].artboardRect = [        this.initLeft,         this.initTop,         this.initLeft + this.pageWidth,         this.initTop - this.pageHeight    ];    this.left = this.initLeft + this.pageWidth;    this.top = this.initTop;};View.prototype.managePages = function() {    this.pageCount = 0;    this.pages = [];    this.measureStart = 0;    var left = this.left;    var top = this.top;    while (this.measureStart < this.measureList.length) {        this.addPage(left, top, this.measureStart);        left += this.pageWidth;        if (left > 100 * 72) {            left = this.initLeft;            top -= this.pageHeight        };    };};View.prototype.addPage = function(left, top, measureStart) {    var page = new Page(        this, left, top, measureStart    );    page.id = this.pageCount;    page.graphicalContext = this.graphicalContext;    page.graphicalContext.name = "Page " + page.id;    page.page();    page.manageSystemsForLayout();    page.repositionSystems();    this.pages.push(page);    this.measureStart = page.measureEnd + 1;    this.pageCount ++;};View.prototype.getPerformerOrder = function() {    var performerOrderByPrimaryPerformerID = {        "FL": ["VA", "CL", "FL"],        "CL": ["VA", "FL", "CL"],        "VA": ["FL", "CL", "VA"],        "omni": ["FL", "VA", "CL"]    };    return performerOrderByPrimaryPerformerID[this.primaryPerformerID];};